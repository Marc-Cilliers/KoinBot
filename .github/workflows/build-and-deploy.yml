name: Build & Deploy

on:
  workflow_dispatch:
  push:
    branches: [master]

env:
  REGISTRY: 'registry.digitalocean.com/mangobot'
  IMAGE_NAME: 'koinbot'

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Build container image
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_TOKEN }}

      - name: Login to DigitalOcean Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Push image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Deploy to DigitalOcean droplet
        uses: appleboy/ssh-action@master
        env:
          DIGITALOCEAN_TOKEN: ${{ secrets.DIGITALOCEAN_TOKEN }}
          DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
          GITHUB_SHA: $GITHUB_SHA
        with:
          host: ${{ secrets.SSH_HOST }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          username: ${{ secrets.SSH_USERNAME }}
          envs: IMAGE_NAME,REGISTRY,DIGITALOCEAN_TOKEN,GITHUB_SHA,DISCORD_TOKEN
          script: |
            # Login to registry
            docker login -u $(echo $DIGITALOCEAN_TOKEN) -p $(echo $DIGITALOCEAN_TOKEN) registry.digitalocean.com
            # Stop running container
            docker stop $(echo $IMAGE_NAME)
            # Remove old container
            docker rm $(echo $IMAGE_NAME)
            # Run a new container from a new image
            docker run -d \
            -e DISCORD_TOKEN=$(echo $DISCORD_TOKEN) \
            --restart always \
            --name $(echo $IMAGE_NAME) \
            $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)
